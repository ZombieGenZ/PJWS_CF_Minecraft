<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script>
        const username = localStorage.getItem("username");
        const password = localStorage.getItem("password");
        if (username !== undefined && username !== null && password !== undefined && password !== null) {
            const data = {
                username: username,
                password: password,
            }
            fetch('/API/authenticationpermission', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
                credentials: 'include'
              })
              .then(res => res.json())
              .then(resData => {
                    if (resData.status) {
                        if (!resData.permission.acceptreportmanagement) {
                            location.href = "/";
                        }
                    }
                    else {
                        location.href = "/";
                    }
                })
            }
            else {
                location.href = "/";
            }
    </script>
    <style>
        :root {
            --brightColor: #1b1c30;
            --prominentColor: #222338;
            --itemsColor: #3869d3;
          }
        
        .main {
            max-width: 100vw;
            min-height: 100vh;
            max-height: 10000vh;
            display: grid;
            color: white;
            background-image: linear-gradient(to bottom, var(--brightColor) 0%, var(--brightColor) 100%);
            background-size: 100% 100vh;
            background-repeat: repeat-y;
            grid-template-columns: minmax(auto, 300px) auto;
        }
        .main-left {
            background-color: var(--prominentColor);
            display: grid;
            grid-template-rows: 200px 1fr;
        }
        .main-left-logo {
            display: grid;
            place-items: center;
        }
        .main-left-logo img {
            max-width: 50%;
        }
        .main-left-logo-content {
            padding: 0 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        .main-left-logo-content-group {
            display: grid;
            grid-template-rows: 30px auto;
        }
        .main-left-logo-content-group-top p {
            user-select: none;
            color: #656680;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 1;
            overflow: hidden;
            text-transform: uppercase;
            font-weight: bold;
        }
        .main-left-logo-content-group-bottom {
            display: grid;
            grid-auto-rows: 40px;
            row-gap: 3px;
        }
        .main-left-logo-content-group-bottom a {
            height: 40px;
            text-decoration: none;
        }
        .main-left-logo-content-group-bottom button {
            color: #656680;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 1;
            overflow: hidden;
            text-align: left;
            font-weight: bold;
            font-size: 18px;
            color: white;
            width: 100%;
            height: 40px;
            border: none;
            background-color: var(--prominentColor);
            transition: background-color 0.3s;
        }
        .main-left-logo-content-group-bottom button:hover:not(.main-left-logo-content-group-bottom-active) {
            border-left: 5px solid var(--itemsColor);
            background-color: var(--brightColor);
        }
        .main-left-logo-content-group-bottom-active button {
            border-left: 5px solid var(--itemsColor);
            background-color: var(--brightColor);
        }
        .main-left-logo-content-group-bottom i {
            margin-left: 8px;
            margin-right: 5px;
        }
        .main-right {
            display: grid;
            grid-template-rows: 80px 1fr;
        }
        .main-right-header {
            display: grid;
            padding: 0 15px;
            grid-template-columns: auto auto minmax(50px, 200px) minmax(50px, 150px);
            background-color: var(--prominentColor);
            column-gap: 10px;
        }
        .main-right-header-menu {
            display: none;
        }
        .main-right-header-title {
            grid-column: 1;
            display: flex;
            align-items: center;
        }
        .main-right-header-money {
            display: grid;
            place-content: center;
            grid-column: 3;
        }
        .btn-money {
            cursor: default !important;
        }
        .main-right-header-account {
            display: grid;
            place-content: center;
            grid-column: 4;
        }
        .btn-color-menu-account {
            border: none !important;
            background-color: var(--itemsColor) !important;
        }
        .btn-color-menu-account-background {
            box-shadow: 0 0 10px var(--brightColor);
            background-color: var(--prominentColor) !important;
        }
        .btn-color-menu-account-items {
            color: white !important;
            transition: background-color, font-weight 0.3s;
        }
        .btn-color-menu-account-items:hover {
            font-weight: bold;
            border-left: 5px solid var(--itemsColor);
            background-color: var(--brightColor) !important;
        }
        .verified {
            color: #3bce5b;
        }
        .manage {
            color: #ff4d00;
        }
        .developer {
            color: #f2ff00;
        }
        .overflow-1 {
            display: -webkit-box !important;
            -webkit-box-orient: vertical !important;
            -webkit-line-clamp: 1 !important;
            overflow: hidden !important;
        }
        .overflow-2 {
            display: -webkit-box !important;
            -webkit-box-orient: vertical !important;
            -webkit-line-clamp: 2 !important;
            overflow: hidden !important;
        }
        .overflow-3 {
            display: -webkit-box !important;
            -webkit-box-orient: vertical !important;
            -webkit-line-clamp: 3 !important;
            overflow: hidden !important;
        }
        .modal-content {
            background-color: var(--brightColor) !important;
        }
        .modal-header {
            color: white;
        }
        .input-group-text-dark {
            color: white !important;
            background-color: var(--prominentColor) !important;
        }
        .accoutn-auth-group {
            margin-bottom: 5px;
        }
        .accoutn-auth-group label {
            margin-left: 5px;
            color: white;
            padding: 10px 0;
        }
        .accoutn-auth-group input {
            color: white;
            display: block;
            height: 35px;
            outline: none;
            border: none;
            padding: 5px 10px;
            background-color: var(--prominentColor);
            width: 100%;
            transition: 0.3s;
            border-radius: 8px;
        }
        .accoutn-auth-group input:focus {
            box-shadow: 0 0 10px var(--itemsColor);
        }
        .accoutn-auth-group-btn {
            display: grid;
            place-content: center;
            margin-top: 10px;
        }
        .accoutn-auth-group-btn-link {
            margin: 10px 0;
            color: white;
            text-align: center;
        }
        .accoutn-auth-group-btn-link a {
            color: white;
            text-decoration: none;
            transition: 0.2s;
        }
        .accoutn-auth-group-btn-link a:hover {
            color: var(--itemsColor);
        }
        .offcanvas {
            background-color: var(--prominentColor) !important;
        }
        #menuLabel {
            color: white;
        }
        #alert {
            color: white !important;
        }
        @media (max-width: 1300px) {
            .main {
                max-width: 100vw;
                min-height: 100vh;
                max-height: 10000vh;
                display: grid;
                color: white;
                background-color: var(--brightColor);
                grid-template-columns: auto;
            }
            .main-right-header {
                display: grid;
                padding: 0 15px;
                grid-template-columns: minmax(0px, 50px) auto minmax(50px, 200px) minmax(50px, 150px);
                background-color: var(--prominentColor);
                column-gap: 10px;
            }
            .main-right-header-title {
                grid-column: 2;
            }
            .main-left {
                background-color: var(--prominentColor);
                display: none;
                grid-template-rows: 200px 1fr;
            }
            .main-right-header-menu {
                display: grid;
                place-content: center;
            }
        }
        @media (max-width: 680px) {
            .main-right-header {
                display: grid;
                padding: 0 15px;
                grid-template-columns: minmax(0px, 50px) auto minmax(80px, 200px);
                background-color: var(--prominentColor);
                column-gap: 10px;
            }
            .main-right-header-money {
                display: grid;
                place-content: center;
                grid-column: 3;
            }
            .main-right-header-account {
                display: none;
            }
        }
        @media (max-width: 570px) {
            .main-right-header {
                display: grid;
                padding: 0 15px;
                grid-template-columns: minmax(0px, 50px) auto minmax(80px, 200px);
                background-color: var(--prominentColor);
                column-gap: 10px;
            }
        }
        @media (max-width: 480px) {
            .main-right-header {
                display: grid;
                padding: 0 15px;
                grid-template-columns: minmax(0px, 50px) auto minmax(auto, 50px);
                background-color: var(--prominentColor);
            }
            .main-right-header-money {
                display: none;
                place-content: center;
                grid-column: 3;
            }
        }
        @media (max-width: 310px) {
            .main-right-header {
                display: grid;
                padding: 0 15px;
                grid-template-columns: minmax(0px, 50px) auto;
                background-color: var(--prominentColor);
            }
            .main-right-header-money {
                display: none;
                place-content: center;
                grid-column: 3;
            }
        }
        @media (max-width: 250px) {
            .main-right-header {
                display: grid;
                padding: 0 15px;
                grid-template-columns: minmax(0px, 50px);
                background-color: var(--prominentColor);
            }
            .main-right-header-title {
                display: none;
            }
        }
        .main-right-header-content {
            padding: 10px;
            display: grid;
            grid-template-columns: minmax(0px, auto) minmax(auto, 1200px) minmax(0px, auto);
        }
        .main-right-header-content-center {
            grid-column: 2;
            display: grid;
            grid-template-rows: 50px 1fr;
        }
        .main-right-header-content-center-top {
            background-color: var(--prominentColor);
            display: grid;
            grid-template-columns: minmax(0px, 750px) minmax(auto, 450px);
        }
        .main-right-header-content-center-top-right {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 30px;
            grid-column: 2;
        }
        .search {
            display: flex;
            gap: 10px;
        }
        .search input {
            padding: 5px 10px;
            outline: none;
            height: 37px;
            border: none;
            color: white;
            border-radius: 10px;
            box-shadow: 0 0 10px #595b91;
            background-color: var(--brightColor);
            transition: 0.3s;
        }
        .search input:focus {
            box-shadow: 0 0 10px #8385d3;
        }
        .search button {
            width: 37px;
            height: 37px;
            color: white;
            border: none;
            background-color: var(--itemsColor);
            transition: 0.3s;
        }
        .search button:hover {
            background-color: #2a4d99;
        }
        .main-right-header-content-center-bottom {
            padding: 10px;
            background-color: var(--prominentColor);
        }
        .table a {
            color: white;
            text-decoration: none;
            transition: 0.3s;
        }
        .table a:hover {
            color: var(--itemsColor);
        }
        @media (max-width: 550px) {
            .main-right-header-content-center-top {
                background-color: var(--prominentColor);
                display: grid;
                grid-template-columns: 1fr;
            }
            .main-right-header-content-center-top-left {
                display: none;
            }
            .search {
                display: none;
            }
            .tb-col3 {
                display: none;
            }
        }
        @media (max-width: 430px) {
            .tb-col5 {
                display: none;
            }
        }
        @media (max-width: 300px) {
            .tb-col4 {
                display: none;
            }
        }
        @media (max-width: 230px) {
            .tb-col1 {
                display: none;
            }
        }
        .modal-body {
            color: white !important;
        }
        .create-product-form-group input {
            width: 100%;
            height: 35px;
            padding: 5px 10px;
            color: white;
            background-color: var(--prominentColor);
            border: none;
            outline: none;
            border-radius: 10px;
            transition: 0.3s;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        .create-product-form-group input:focus {
            box-shadow: 0 0 10px #6265a9;
        }
        .create-product-form-group textarea {
            min-width: 100%;
            max-width: 100%;
            min-height: 100px;
            max-height: 100px;
            padding: 5px 10px;
            color: white;
            background-color: var(--prominentColor);
            border: none;
            outline: none;
            border-radius: 10px;
            transition: 0.3s;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        .create-product-form-group textarea:focus {
            box-shadow: 0 0 10px #6265a9;
        }
        .create-product-form-group-information {
            display: grid;
            grid-template-rows: 1fr 50px;
            row-gap: 5px;
        }
        .create-product-form-group-information-create {
            display: grid;
            place-content: center;
        }
        .create-product-form-group-information-group-items {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            column-gap: 5px;
        }
        .create-product-form-group-information-group-items input {
            width: 100%;
            padding: 5px 10px;
            height: 30px;
            color: white;
            margin-top: 3px;
            background-color: var(--prominentColor);
            outline: none;
            border: none;
            transition: 0.3s;
        }
        .create-product-form-group-information-group-items-items {
            display: flex;
            flex-direction: column;
            justify-content: end;
        }
        .create-product-form-group-information-group-items-items button {
            width: 100%;
            height: 30px;
            color: white;
            background-color: red;
            border: none;
            transition: 0.3s;
        }
        .create-product-form-group-information-group-items-items button:hover {
            background-color: hsl(0, 100%, 40%);
        }
        .create-product-form-group-information-group-items-items input:focus {
            box-shadow: 0 0 10px #5f629b;
        }
        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .accordion {
            margin: 10px 0 !important;
        }
        .accordion-button {
            color: white !important;
            background-color: var(--prominentColor) !important;
        }
        .accordion-item {
            border: none !important;
        }
        .accordion-body {
            background-color: var(--prominentColor) !important;
        }
        .accordion-body h4 {
            display: inline !important;
        }
        .accordion-header {
            color: white !important;
        }
        .accordion-body {
            color: white;
        }
        .accordion-body h3 {
            display: inline-block !important;
        }
        
        .green {
            color: green;
        }
        .aqua {
            color: aqua;
        }
        .yellow {
            color: yellow;
        }
        .black {
            color: black;
        }
        .blue {
            color: blue;
        }
        .pink {
            color: pink;
        }
        .red {
            color: red;
        }
        input[type="file"] {
            display: none;
        }
        .custom_fileinput {
            width: 100%;
            padding: 3px 10px;
            height: 30px;
            color: white;
            margin-top: 3px;
            background-color: var(--prominentColor);
            outline: none;
            border: none;
            transition: 0.3s;
        }
        .input-file-upload {
            padding: 15px 5px;
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-auto-rows: 27px;
            gap: 5px;
        }
        .input-file-upload-items {
            padding: 0 10px;
            display: grid;
            grid-template-columns: 1fr auto;
            background-color: var(--prominentColor);
        }
        .alert-create-product {
            margin: 5px 0;
            width: 100%;
            height: 95px;
            background-color: rgba(255, 0, 0, 0.25);
            border: 2px solid rgba(255, 0, 0, 0.75);
            padding: 10px;
        }
        .main-right-header-content-center-center {
            display: grid;
            grid-template-rows: 50px minmax(0px, auto);
            padding: 10px;
        }
        .main-right-header-content-center-center-top {
            display: flex;
            align-items: center;
        }
        .main-right-header-content-center-center-center-items {
            display: grid;
            grid-template-columns: 20% 80%;
            column-gap: 10px;
        }
        .main-right-header-content-center-center-center-items-right {
            text-align: left;
        }
        .main-right-header-content-center-bottom {
            padding: 10px;
            flex-direction: column;
            display: flex;
            gap: 10px;
        }
        .main-right-header-content-center-bottom-items {
            display: grid;
            grid-template-columns: 1fr 150px;
            column-gap: 10px;
        }
        .main-right-header-content-center-bottom-items-left {
            display: grid;
            grid-template-columns: 100px 1fr;
            gap: 10px;
        }
        .main-right-header-content-center-bottom-items-left-left img {
            max-width: 100px;
            max-height: 100px;
        }
        .main-right-header-content-center-bottom-items-left-right a {
            color: white;
            text-decoration: none;
            transition: 0.3s;
        }
        .main-right-header-content-center-bottom-items-left-right a:hover {
            color: var(--itemsColor);
        }
        .main-right-header-content-center-bottom-items-left-left {
            display: grid;
            place-content: center;
        }
        .main-right-header-content-center-bottom-items-right {
            display: grid;
            place-items: center;
        }
        .none-items {
            display: grid;
            place-content: center;
        }
        .main-right-header-content-center-center a {
            color: white;
            text-decoration: none;
            transition: 0.3s;
        }
        .main-right-header-content-center-center a:hover {
            color: var(--itemsColor);
        }
        .create-product-form select {
            margin: 5px 0;
            color: white;
            background-color: var(--prominentColor);
        }
    </style>
    <link rel="icon" href="/image/system/favourite.ico" type="image/x-icon">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <title>Quản lý tố cáo</title>
</head>
<body>
    <div class="madol" id="modal">
        <div class="modal fade" id="loginMadal" tabindex="-1" aria-labelledby="loginLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h1 class="modal-title fs-5" id="loginLabel">Đăng nhập tài khoản</h1>
                  <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="accoutn-auth-group">
                        <label for="login-username"><i class="fa-solid fa-user"></i> Tên người dùng</label>
                        <input type="text" id="login-username" placeholder="Nhập tên người dùng của bạn">
                    </div>
                    <div class="accoutn-auth-group">
                        <label for="login-password"><i class="fa-solid fa-key"></i> Mật khẩu</label>
                        <input type="password" id="login-password" placeholder="Nhập mật khẩu của bạn">
                    </div>
                    <div class="accoutn-auth-group-btn">
                        <button type="button" class="btn btn-success form-auth-btn" onclick="LoginAccount()">Đăng nhập</button>
                    </div>
                    <div class="accoutn-auth-group-btn-link">
                        <a href="#" data-bs-toggle="modal" data-bs-target="#forgotpasswordMadal">Quên mật khẩu?</a> |
                        <a href="#" data-bs-toggle="modal" data-bs-target="#registerMadal">Bạn chưa có tài khoản</a>
                    </div>
                </div>
              </div>
            </div>
          </div>  
          <div class="modal fade" id="registerMadal" tabindex="-1" aria-labelledby="registerLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h1 class="modal-title fs-5" id="registerLabel">Đăng ký tài khoản</h1>
                  <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="accoutn-auth-group">
                        <label for="register-username"><i class="fa-solid fa-user"></i> Tên người dùng</label>
                        <input type="text" id="register-username" placeholder="Nhập tên người dùng của bạn">
                    </div>
                    <div class="accoutn-auth-group">
                        <label for="register-email"><i class="fa-solid fa-envelope"></i> Đại chỉ email</label>
                        <input type="text" id="register-email" placeholder="Nhập địa chỉ email của bạn">
                    </div>
                    <div class="accoutn-auth-group">
                        <label for="register-password"><i class="fa-solid fa-key"></i> Mật khẩu</label>
                        <input type="password" id="register-password" placeholder="Nhập mật khẩu của bạn">
                    </div>
                    <div class="accoutn-auth-group">
                        <label for="register-comfirmpassword"><i class="fa-solid fa-key"></i> Xác nhận mật khẩu</label>
                        <input type="password" id="register-comfirmpassword" placeholder="Xác nhận mật khẩu của bạn">
                    </div>
                    <div class="accoutn-auth-group-btn">
                        <button type="submit" class="btn btn-success form-auth-btn" onclick="RegisterAccount()">Đăng ký</button>
                    </div>
                    <div class="accoutn-auth-group-btn-link">
                        <a href="#" data-bs-toggle="modal" data-bs-target="#loginMadal">Bạn đã có tài khoản?</a>
                    </div>
                </div>
              </div>
            </div>
          </div> 
          <div class="modal fade" id="forgotpasswordMadal" tabindex="-1" aria-labelledby="forgotpasswordLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h1 class="modal-title fs-5" id="forgotpasswordLabel">Quên mật khẩu</h1>
                  <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="alert">Một email sẽ gửi về hộp thư của bạn điều này sẽ giúp chúng tôi xác minh bạn là chủ nhân của tài khoản này</p>
                    <div class="accoutn-auth-group">
                        <label for="forget-email"><i class="fa-solid fa-envelope"></i> Địa chỉ email</label>
                        <input type="text" id="forget-email" placeholder="Nhập địa chỉ email của bạn">
                    </div>
                    <div class="accoutn-auth-group-btn">
                        <button type="button" class="btn btn-success form-auth-btn" onclick="forgetPassword()">Xác nhận</button>
                    </div>
                </div>
              </div>
            </div>
          </div>  
    </div>
    <div class="punishuser-profile-modal" id="punishuser-profile-modal"></div>
    <div class="punishproduct-profile-modal" id="punishproduct-profile-modal"></div>
    <div class="punishpost-profile-modal" id="punishpost-profile-modal"></div>
    <div class="punishsenderuser-profile-modal" id="punishsenderuser-profile-modal"></div>
    <div class="punishsenderproduct-profile-modal" id="punishsenderproduct-profile-modal"></div>
    <div class="punishsenderpost-profile-modal" id="punishsenderpost-profile-modal"></div>
    <div class="main">
        <div class="main-left">
            <div class="main-left-logo">
                <img src="image/system/logo.png" alt="Logo">
            </div>
            <div class="main-left-logo-content" id="v_menu">
                <div class="main-left-logo-content-group">
                    <div class="main-left-logo-content-group-top">
                        <p>Thảo luận</p>
                    </div>
                    <div class="main-left-logo-content-group-bottom">
                        <a href="/">
                            <button><i class="fa-solid fa-bullhorn"></i> Thông báo</button>
                        </a>
                        <a href="/forumn">
                            <button><i class="fa-solid fa-comments"></i> Diển đàn</button>
                        </a>
                    </div>
                </div>
                <div class="main-left-logo-content-group">
                    <div class="main-left-logo-content-group-top">
                        <p>Cửa hàng</p>
                    </div>
                    <div class="main-left-logo-content-group-bottom">
                        <a href="/store" >
                            <button><i class="fa-solid fa-bag-shopping"></i> Cửa hàng</button>
                        </a>
                    </div>
                </div>
                    <div class="main-left-logo-content-group">
                        <div class="main-left-logo-content-group-top">
                            <p>Tài khoản</p>
                        </div>
                        <div class="main-left-logo-content-group-bottom">
                            <a href="#" data-bs-toggle="modal" data-bs-target="#loginMadal">
                                <button><i class="fa-solid fa-user"></i> Đăng nhập</button>
                            </a>
                            <a href="#" data-bs-toggle="modal" data-bs-target="#registerMadal">
                                <button><i class="fa-solid fa-user-plus"></i> Đăng ký</button>
                            </a>
                        </div>
                    </div>
            </div>
        </div>
        <div class="main-right">
            <div class="main-right-header">
                <div class="main-right-header-menu">
                    <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#menu" aria-controls="offcanvasExample">
                        <i class="fa-solid fa-bars"></i>
                      </button>
                </div>
                <div class="main-right-header-title">
                    <h1 class="overflow-1">Quản lý tài khoản</h1>
                </div>
                <div class="main-right-header-money">
                    <button type="button" class="btn btn-warning overflow-1 btn-money">
                        <i class="fa-solid fa-money-bill-1"></i>
                        <span id="money">0</span>
                        đ
                    </button>
                </div>
                <div class="main-right-header-account">
                    <div class="dropdown" id="dropdown_menu">
                        <a class="btn btn-secondary dropdown-toggle btn-color-menu-account" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                          KHÁCH
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end btn-color-menu-account-background">
                          <li><a class="dropdown-item btn-color-menu-account-items" href="#" data-bs-toggle="modal" data-bs-target="#loginMadal">Đăng nhập</a></li>
                          <li><a class="dropdown-item btn-color-menu-account-items" href="#" data-bs-toggle="modal" data-bs-target="#registerMadal">Đăng ký</a></li>
                        </ul>
                      </div>
                </div>
            </div>
            <div class="main-right-header-content">
                <div class="main-right-header-content-center">
                    <div class="main-right-header-content-center-top">
                        <div class="main-right-header-content-center-top-left"></div>
                        <div class="main-right-header-content-center-top-right">
                            <div class="search">
                                <input type="text" placeholder="Tìm kiếm..." id="user-search">
                                <button onclick="SearchReport()"><i class="fa-solid fa-magnifying-glass"></i></button>
                            </div>
                        </div>
                    </div>
                    <div class="main-right-header-content-center-bottom" id="productlist">
                        <div class="loading-product placeholder-glow">
                            <span class="placeholder col-4"></span>
                            <span class="placeholder col-2"></span>
                            <span class="placeholder col-5"></span>
                            <span class="placeholder col-3"></span>
                            <span class="placeholder col-1"></span>
                            <span class="placeholder col-2"></span>
                            <span class="placeholder col-2"></span>
                            <span class="placeholder col-3"></span>
                            <span class="placeholder col-3"></span>
                            <span class="placeholder col-6"></span>
                            <span class="placeholder col-1"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="Offcanvas">
        <div class="offcanvas offcanvas-start" tabindex="-1" id="menu" aria-labelledby="menuLabel">
            <div class="offcanvas-header">
              <h5 class="offcanvas-title" id="menuLabel">Menu</h5>
              <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <div class="main-left-logo-content" id="menu_offcanvas">
                    <div class="main-left-logo-content-group">
                        <div class="main-left-logo-content-group-top">
                            <p>Thảo luận</p>
                        </div>
                        <div class="main-left-logo-content-group-bottom">
                            <a href="/">
                                <button><i class="fa-solid fa-bullhorn"></i> Thông báo</button>
                            </a>
                            <a href="/forumn">
                                <button><i class="fa-solid fa-comments"></i> Diển đàn</button>
                            </a>
                        </div>
                    </div>
                    <div class="main-left-logo-content-group">
                        <div class="main-left-logo-content-group-top">
                            <p>Cửa hàng</p>
                        </div>
                        <div class="main-left-logo-content-group-bottom">
                            <a href="/store" >
                                <button><i class="fa-solid fa-bag-shopping"></i> Cửa hàng</button>
                            </a>
                        </div>
                    </div>
                        <div class="main-left-logo-content-group">
                            <div class="main-left-logo-content-group-top">
                                <p>Tài khoản</p>
                            </div>
                            <div class="main-left-logo-content-group-bottom">
                                <a href="#" data-bs-toggle="modal" data-bs-target="#loginMadal">
                                    <button><i class="fa-solid fa-user"></i> Đăng nhập</button>
                                </a>
                                <a href="#" data-bs-toggle="modal" data-bs-target="#registerMadal">
                                    <button><i class="fa-solid fa-user-plus"></i> Đăng ký</button>
                                </a>
                            </div>
                        </div>
            </div>
          </div>
          </div>
    </div>
    <script>
        async function RegisterAccount() {
            let username = document.getElementById("register-username").value;
            let email = document.getElementById("register-email").value;
            let password = document.getElementById("register-password").value;
            let comfirmpassword = document.getElementById("register-comfirmpassword").value;
    
            username = normalizeString(username);
            email = normalizeString_Email(email);
            password = normalizeString(password);
            comfirmpassword = normalizeString(comfirmpassword);
    
            if (username === "" || email === "" || password === "" || comfirmpassword === "") {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Bạn cần điền đầy đủ thông tin để tiếp tục",
                    background: '#222338',
                    color: "white",
                    footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                    });
                return;
            }
            else {
                    if (username.length < 4 || username.length > 20) {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Tên người dùng chỉ có thể dài từ 4 đến 20 ký tự",
                            background: '#222338',
                            color: "white",
                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                          });
                        return;
                    }
                    else {
                        const accpetUsername = checkAlphanumeric(username);
                        if (accpetUsername === false) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Tên người dùng không đựa chứa các ký tự đặt biệt",
                                background: '#222338',
                                color: "white",
                                footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                              });
                            return;
                        }
                        else {
                            const isEmail = checkEmail(email);
                            if (!isEmail) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Email không hợp lệ",
                                    background: '#222338',
                                    color: "white",
                                    footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                                  });
                                return;
                            }
                            else {
                                if (password !== comfirmpassword) {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Oops...",
                                        text: "Hai mật khẩu không trùng khớp",
                                        background: '#222338',
                                        color: "white",
                                        footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                                      });
                                    return;
                                }
                                else {
                                    if (password.length < 8 || password.length > 50) {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Oops...",
                                            text: "Mật khẩu chỉ có thể dài 8 đến 50 ký tự",
                                            background: '#222338',
                                            color: "white",
                                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                                          });
                                        return;
                                    }
                                    else {
                                        const data = {
                                            username: username,
                                            email: email,
                                            password: password,
                                            comfirmpassword: comfirmpassword
                                        }
                                        fetch('/API/register', {
                                            method: 'POST',
                                            headers: {
                                              'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify(data),
                                            credentials: 'include'
                                          })
                                          .then(res => res.json())
                                          .then(resData => {
                                            if (resData.status) {
                                                localStorage.setItem("username", resData.username);
                                                localStorage.setItem("password", resData.password);
                                                Swal.fire({
                                                    icon: "success",
                                                    title: "Chúc mừng",
                                                    text: `${resData.message}`,
                                                    background: '#222338',
                                                    color: "white"
                                                }).then((result) => {
                                                    if (result.dismiss === Swal.DismissReason.backdrop) {
                                                      location.reload();
                                                    }
                                                    else {
                                                        location.reload();
                                                    }
                                                  });;
                                            } else {
                                                Swal.fire({
                                                    icon: "error",
                                                    title: "Oops...",
                                                    text: `${resData.message}`,
                                                    background: '#222338',
                                                    color: "white",
                                                    footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                                                });
                                            }
                                          })
                                    }
                                }
                            }
                        }
                    }
                }
        }
        function LoginAccount(){
            let username = document.getElementById("login-username").value;
            let password = document.getElementById("login-password").value;
    
            username = normalizeString(username);
            password = normalizeString(password);
    
            if (username === "" || password === "") {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Vui lòng điền đầy đủ thông tin",
                    background: '#222338',
                    color: "white",
                    footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                  });
                return;
            }
            else {
                const data = {
                    username: username,
                    password: password
                }
                fetch('/API/authentication', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                    credentials: 'include'
                  })
                  .then(res => res.json())
                  .then(resData => {
                    if (resData.status) {
                        localStorage.setItem("username", resData.user.username);
                        localStorage.setItem("password", resData.user.password);
                        Swal.fire({
                            icon: "success",
                            title: "Chúc mừng",
                            text: `${resData.message}`,
                            background: '#222338',
                            color: "white"
                        }).then((result) => {
                            if (result.dismiss === Swal.DismissReason.backdrop) {
                              location.reload();
                            }
                            else {
                                location.reload();
                            }
                          });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: `${resData.message}`,
                            background: '#222338',
                            color: "white",
                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                        });
                    }
                })
            }
        }
        function forgetPassword() {
            const input = document.getElementById("forget-email").value;
    
            if (input !== "" && input !== undefined && input !== null) {
                const isEmail = checkEmail(input);
                if (isEmail) {
                    const data = {
                        email: input
                    }
                    fetch('/API/createotp', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                        credentials: 'include'
                      })
                      .then(res => res.json())
                      .then(resData => {
                        if (resData.status) {
                            Swal.fire({
                                icon: "success",
                                title: "Chúc mừng",
                                text: `${resData.message}`,
                                background: '#222338',
                                color: "white"
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.backdrop) {
                                  location.reload();
                                }
                                else {
                                    location.reload();
                                }
                              });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: `${resData.message}`,
                                background: '#222338',
                                color: "white",
                                footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                            });
                        }
                      })
                 }
                 else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: `Email không đúng định dạn`,
                        background: '#222338',
                        color: "white",
                        footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                    });
                 }
            }
            else {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: `Vui lòng điền đầy đủ thông tin`,
                    background: '#222338',
                    color: "white",
                    footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                });
            }
        }
        function checkEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }
        function checkAlphanumeric(str) {
            const alphanumericRegex = /^[a-zA-Z0-9]+$/;
            return alphanumericRegex.test(str);
        }
        function normalizeString(str) {
            return String(str)
                .trim()
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")
                .replace(/\s+/g, "");
            }
        function normalizeString_Email(str) {
            return String(str)
                .trim()
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")
                .replace(/\s+/g, "")
                .toLowerCase();
        }
        function LoadFunction() {
            const username = localStorage.getItem("username");
            const password = localStorage.getItem("password");
            if (username !== undefined && username !== null && password !== undefined && password !== null) {
                const data = {
                    username: username,
                    password: password,
                }
                fetch('/API/authenticationpermission', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                    credentials: 'include'
                  })
                  .then(res => res.json())
                  .then(resData => {
                    if (resData.status) {
                        document.getElementById("modal").innerHTML = "";
                        let HTML_offcanvas = `<div class="center-money-offset">
                            <button type="button" class="btn btn-warning overflow-1 btn-money">
                                <i class="fa-solid fa-money-bill-1"></i>
                                <span id="money">${resData.money.toLocaleString("de-DE")}</span>
                                đ
                        </button>
                    </div>`;
            HTML_offcanvas += `<div class="main-left-logo-content-group">
                <div class="main-left-logo-content-group-top">
                    <p>Thảo luận</p>
                </div>
                <div class="main-left-logo-content-group-bottom">
                    <a href="/">
                        <button><i class="fa-solid fa-bullhorn"></i> Thông báo</button>
                    </a>
                    <a href="/forumn">
                        <button><i class="fa-solid fa-comments"></i> Diển đàn</button>
                    </a>
                </div>
            </div>
            <div class="main-left-logo-content-group">
                <div class="main-left-logo-content-group-top">
                    <p>Cửa hàng</p>
                </div>
                <div class="main-left-logo-content-group-bottom">
                    <a href="/store">
                        <button><i class="fa-solid fa-bag-shopping"></i> Cửa hàng</button>
                    </a>
                    <a href="/shoppingcart">
                        <button><i class="fa-solid fa-cart-shopping"></i> Giỏ hàng</button>
                    </a>
                </div>
            </div>`;
            let HTML_vmenu = `<div class="main-left-logo-content-group">
                <div class="main-left-logo-content-group-top">
                    <p>Thảo luận</p>
                </div>
                <div class="main-left-logo-content-group-bottom">
                    <a href="/">
                        <button><i class="fa-solid fa-bullhorn"></i> Thông báo</button>
                    </a>
                    <a href="/forumn">
                        <button><i class="fa-solid fa-comments"></i> Diển đàn</button>
                    </a>
                </div>
            </div>
            <div class="main-left-logo-content-group">
                <div class="main-left-logo-content-group-top">
                    <p>Cửa hàng</p>
                </div>
                <div class="main-left-logo-content-group-bottom">
                    <a href="/store">
                        <button><i class="fa-solid fa-bag-shopping"></i> Cửa hàng</button>
                    </a>
                    <a href="/shoppingcart">
                        <button><i class="fa-solid fa-cart-shopping"></i> Giỏ hàng</button>
                    </a>
                </div>
            </div>`;
            if (resData.permission.acceptproductmanagement || resData.permission.acceptproductmanagementall || resData.permission.acceptvouchermanagementall || resData.permission.acceptcensorproduct || resData.permission.acceptviewchart || resData.permission.acceptviewchartall) {
                HTML_offcanvas += `<div class="main-left-logo-content-group">
                                <div class="main-left-logo-content-group-top">
                                    <p>Người bán</p>
                                </div>
                                <div class="main-left-logo-content-group-bottom">`;
                HTML_vmenu += `<div class="main-left-logo-content-group">
                    <div class="main-left-logo-content-group-top">
                        <p>Người bán</p>
                    </div>
                    <div class="main-left-logo-content-group-bottom">`;
                if (resData.permission.acceptproductmanagement || resData.permission.acceptproductmanagementall) {
                    HTML_offcanvas += `<a href="/productpanagement">
                                <button><i class="fa-brands fa-product-hunt"></i> Quản lý sản phẩm</button>
                            </a>`;
                    HTML_vmenu += `<a href="/productpanagement">
                        <button><i class="fa-brands fa-product-hunt"></i> Quản lý sản phẩm</button>
                    </a>`;
                            
                }
                HTML_offcanvas += `</div>
                    </div>`;
                HTML_vmenu += `</div>
                    </div>`;
            }
            if (resData.permission.acceptcensorproduct || resData.permission.acceptcensorcooperate || resData.permission.acceptaccountmanagement || resData.permission.acceptreportmanagement || resData.permission.acceptpostmanagement || resData.permission.acceptcensorpost) {
                HTML_offcanvas += `<div class="main-left-logo-content-group">
                                <div class="main-left-logo-content-group-top">
                                    <p>Quản trị viên</p>
                                </div>
                                <div class="main-left-logo-content-group-bottom">`;
                HTML_vmenu += `<div class="main-left-logo-content-group">
                    <div class="main-left-logo-content-group-top">
                        <p>Quản trị viên</p>
                    </div>
                    <div class="main-left-logo-content-group-bottom">`;
                if (resData.permission.acceptcensorpost) {
                    HTML_offcanvas += `<a href="/censorpost">
                                <button><i class="fa-solid fa-bug"></i> Kiểm duyệt bài viết</button>
                            </a>`;
                    HTML_vmenu += `<a href="/censorpost">
                        <button><i class="fa-solid fa-bug"></i> Kiểm duyệt bài viết</button>
                    </a>`;
                }
                if (resData.permission.acceptcensorproduct) {
                    HTML_offcanvas += `<a href="/censorproduct">
                        <button><i class="fa-solid fa-diagram-successor"></i> Kiễm duyệt sản phẩm</button>
                    </a>`;
                    HTML_vmenu += `<a href="/censorproduct">
                        <button><i class="fa-solid fa-diagram-successor"></i> Kiễm duyệt sản phẩm</button>
                    </a>`;
                }
                if (resData.permission.acceptreportmanagement) {
                    HTML_offcanvas += `<a href="/reportmanagement" class="main-left-logo-content-group-bottom-active">
                                <button><i class="fa-solid fa-bug"></i> Quản lý tố cáo</button>
                            </a>`;
                    HTML_vmenu += `<a href="/reportmanagement" class="main-left-logo-content-group-bottom-active">
                        <button><i class="fa-solid fa-bug"></i> Quản lý tố cáo</button>
                    </a>`;
                }
                if (resData.permission.acceptaccountmanagement) {
                    HTML_offcanvas += `<a href="/accountmanagement">
                                <button><i class="fa-solid fa-shield-halved"></i> Quản lý tài khoản</button>
                            </a>`;
                    HTML_vmenu += `<a href="/accountmanagement">
                        <button><i class="fa-solid fa-shield-halved"></i> Quản lý tài khoản</button>
                    </a>`;
                }
                HTML_offcanvas += `</div>
                    </div>`;
                    HTML_vmenu += `</div>
                </div>`;
            }
            HTML_offcanvas += `<div class="main-left-logo-content-group">
                        <div class="main-left-logo-content-group-top">
                            <p>Tài khoản</p>
                        </div>
                        <div class="main-left-logo-content-group-bottom">
                            <a href="/profile">
                                <button><i class="fa-solid fa-user"></i> Tài khoản</button>
                            </a>
                            <a href="/paymentgateway">
                                <button><i class="fa-solid fa-dollar-sign"></i> Nạp tiền</button>
                            </a>
                            <a href="/purchasedproducts">
                                <button><i class="fa-solid fa-basket-shopping"></i> Đã mua</button>
                            </a>
                        </div>`;
                HTML_vmenu += `<div class="main-left-logo-content-group">
                    <div class="main-left-logo-content-group-top">
                        <p>Tài khoản</p>
                    </div>
                    <div class="main-left-logo-content-group-bottom">
                        <a href="/profile">
                            <button><i class="fa-solid fa-user"></i> Tài khoản</button>
                        </a>
                        <a href="/paymentgateway">
                            <button><i class="fa-solid fa-dollar-sign"></i> Nạp tiền</button>
                        </a>
                        <a href="/purchasedproducts">
                            <button><i class="fa-solid fa-basket-shopping"></i> Đã mua</button>
                        </a>
                    </div>`;
                    document.getElementById("v_menu").innerHTML = HTML_vmenu;
                    document.getElementById("menu_offcanvas").innerHTML = HTML_offcanvas;

                    let dropdown = `<a class="btn btn-secondary dropdown-toggle btn-color-menu-account" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">${resData.username}`;
                    if (resData.verify) {
                        dropdown += ` <i class="fa-solid fa-circle-check verified"></i>`
                    }
                    dropdown += `</a>`;
                    dropdown += `</ul>
                                    <ul class="dropdown-menu dropdown-menu-end btn-color-menu-account-background">
                                        <li><a class="dropdown-item btn-color-menu-account-items" href="/profile/">Tài khoản</a></li>
                                        <li><a class="dropdown-item btn-color-menu-account-items" href="/shoppingcart">Giỏ hàng</a></li>
                                        <li><a class="dropdown-item btn-color-menu-account-items" href="/purchasedproducts">Sản phẩm đã mua</a></li>
                                        <li><a class="dropdown-item btn-color-menu-account-items" href="" onclick="Logout()">Đăng xuất</a></li>
                                    </ul>`;
                    document.getElementById("dropdown_menu").innerHTML = dropdown;
                    document.getElementById("money").textContent = `${resData.money.toLocaleString('de-DE')}`;
                        }
                  })
            }
        }
    LoadFunction();
    function Logout() {
        localStorage.removeItem("username");
        localStorage.removeItem("password");
        location.reload();
    }
    </script>
    <script>
    document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("modal").innerHTML = ``;
        function loadReport() {
            const username = localStorage.getItem("username");
            const password = localStorage.getItem("password");
            if (username !== undefined && username !== null && password !== undefined && password !== null) {
                const data = {
                    username: username,
                    password: password,
                }
                fetch('/API/authenticationpermission', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                    credentials: 'include'
                  })
                  .then(res => res.json())
                  .then(async resData => {
                      if (resData.status) {
                        let HTMLUser = "";
                        let HTMLProduct = "";
                        let HTMLPost = "";
                        await fetch('/API/getallreportuserdata', {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                          })
                          .then(res => res.json())
                          .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishuser-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderuser-profile-modal").innerHTML = "";
                                    HTMLUser = `<h3>Tố cáo người dùng</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên người dùng</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-user-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-user-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-user-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="user-sender-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="user-sender-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="user-sender-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'user-sender', '${randomNumber}', 1, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                                let punishModal = `<div class="modal fade" id="punish-user-${items.userid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punish-user-${items.userid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punish-user-${items.userid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-reason-${items.userid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="user-punish-reason-${items.userid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-startime-${items.userid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="user-punish-startime-${items.userid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-endime-${items.userid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="user-punish-endime-${items.userid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.userid}', 'user', '${randomNumber}', 1, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderuser-profile-modal").innerHTML += punishSenderModal;
                                            document.getElementById("punishuser-profile-modal").innerHTML += punishModal;
                                            HTMLUser += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/profile/${items.username}" class="overflow-1" target="_blank">${items.username}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-user-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#punish-user-${items.userid}-${randomNumber}-punishModal">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLUser += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        await fetch('/API/getallreportproductdata', {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                          })
                          .then(res => res.json())
                          .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishproduct-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderproduct-profile-modal").innerHTML = "";
                                    HTMLProduct = `<h3>Tố cáo Sản phẩm</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên sản phẩm</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-product-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-product-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-product-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="product-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="product-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="product-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'product', '${randomNumber}', 2, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderproduct-profile-modal").innerHTML += punishSenderModal;
                                            HTMLProduct += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/product/${items.productpath}" class="overflow-1" target="_blank">${items.producttitle}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-product-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" onclick="ExecuteReportProduct(${items.reportid}, '${items.productid}')">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLProduct += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        await fetch('/API/getallreportpostdata', {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                          })
                          .then(res => res.json())
                          .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishpost-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderpost-profile-modal").innerHTML = "";
                                    HTMLPost = `<h3>Tố cáo bài viết</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên bài viết</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-post-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-post-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-post-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="post-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="post-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="post-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'post', '${randomNumber}', 3, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderpost-profile-modal").innerHTML += punishSenderModal;
                                            HTMLPost += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/post/${items.postpath}" class="overflow-1" target="_blank">${items.posttitle}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-post-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" onclick="ExecuteReportPost(${items.reportid}, ${items.postid})">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLPost += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        if (HTMLUser != "" || HTMLProduct != "" || HTMLPost != "") {
                            document.getElementById("productlist").innerHTML = "";
                            document.getElementById("productlist").innerHTML += HTMLUser;
                            document.getElementById("productlist").innerHTML += HTMLProduct;
                            document.getElementById("productlist").innerHTML += HTMLPost;
                        }
                        else {
                            document.getElementById("productlist").innerHTML = `<div class="none-items">
                                <p>Hiện không có bất cứ tố cáo nào hợp lệ</p>
                            </div>`;
                            return;
                        }
                        }
                    })
                }
                else {
                    location.href = "/";
                }
        }
        loadReport();  
    });
    function SearchReport() {
        const username = localStorage.getItem("username");
        const password = localStorage.getItem("password");
        if (username !== undefined && username !== null && password !== undefined && password !== null) {
            const input = document.getElementById("user-search").value;
            if (input === "") {
                document.getElementById("productlist").innerHTML = `<div class="loading-product placeholder-glow">
                                                                        <span class="placeholder col-4"></span>
                                                                        <span class="placeholder col-2"></span>
                                                                        <span class="placeholder col-5"></span>
                                                                        <span class="placeholder col-3"></span>
                                                                        <span class="placeholder col-1"></span>
                                                                        <span class="placeholder col-2"></span>
                                                                        <span class="placeholder col-2"></span>
                                                                        <span class="placeholder col-3"></span>
                                                                        <span class="placeholder col-3"></span>
                                                                        <span class="placeholder col-6"></span>
                                                                        <span class="placeholder col-1"></span>
                                                                    </div>`;
                const data = {
                    username: username,
                    password: password,
                }
                fetch('/API/getallaccountdata', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                    credentials: 'include'
                    })
                    .then(res => res.json())
                    .then(async resData => {
                    if (resData.status) {
                        let HTMLUser = "";
                        let HTMLProduct = "";
                        let HTMLPost = "";
                        await fetch('/API/getallreportuserdata', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                        })
                        .then(res => res.json())
                        .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishuser-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderuser-profile-modal").innerHTML = "";
                                    HTMLUser = `<h3>Tố cáo người dùng</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên người dùng</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-user-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-user-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-user-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="user-sender-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="user-sender-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="user-sender-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'user-sender', '${randomNumber}', 1, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                                let punishModal = `<div class="modal fade" id="punish-user-${items.userid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punish-user-${items.userid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punish-user-${items.userid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-reason-${items.userid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="user-punish-reason-${items.userid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-startime-${items.userid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="user-punish-startime-${items.userid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-endime-${items.userid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="user-punish-endime-${items.userid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.userid}', 'user', '${randomNumber}', 1, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderuser-profile-modal").innerHTML += punishSenderModal;
                                            document.getElementById("punishuser-profile-modal").innerHTML += punishModal;
                                            HTMLUser += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/profile/${items.username}" class="overflow-1" target="_blank">${items.username}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-user-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#punish-user-${items.userid}-${randomNumber}-punishModal">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLUser += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        await fetch('/API/getallreportproductdata', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                        })
                        .then(res => res.json())
                        .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishproduct-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderproduct-profile-modal").innerHTML = "";
                                    HTMLProduct = `<h3>Tố cáo Sản phẩm</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên sản phẩm</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-product-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-product-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-product-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="product-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="product-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="product-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'product', '${randomNumber}', 2, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderproduct-profile-modal").innerHTML += punishSenderModal;
                                            HTMLProduct += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/product/${items.productpath}" class="overflow-1" target="_blank">${items.producttitle}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-product-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" onclick="ExecuteReportProduct(${items.reportid}, '${items.productid}')">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLProduct += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        await fetch('/API/getallreportpostdata', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                        })
                        .then(res => res.json())
                        .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishpost-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderpost-profile-modal").innerHTML = "";
                                    HTMLPost = `<h3>Tố cáo bài viết</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên bài viết</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-post-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-post-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-post-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="post-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="post-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="post-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'post', '${randomNumber}', 3, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderpost-profile-modal").innerHTML += punishSenderModal;
                                            HTMLPost += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/post/${items.postpath}" class="overflow-1" target="_blank">${items.posttitle}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-post-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" onclick="ExecuteReportPost(${items.reportid}, ${items.postid})">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLPost += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        if (HTMLUser != "" || HTMLProduct != "" || HTMLPost != "") {
                            document.getElementById("productlist").innerHTML = "";
                            document.getElementById("productlist").innerHTML += HTMLUser;
                            document.getElementById("productlist").innerHTML += HTMLProduct;
                            document.getElementById("productlist").innerHTML += HTMLPost;
                        }
                        else {
                            document.getElementById("productlist").innerHTML = `<div class="none-items">
                                <p>Hiện không có bất cứ tố cáo nào hợp lệ</p>
                            </div>`;
                            return;
                        }
                    }
                })
            }
            else {
                document.getElementById("productlist").innerHTML = `<div class="loading-product placeholder-glow">
                                                                        <span class="placeholder col-4"></span>
                                                                        <span class="placeholder col-2"></span>
                                                                        <span class="placeholder col-5"></span>
                                                                        <span class="placeholder col-3"></span>
                                                                        <span class="placeholder col-1"></span>
                                                                        <span class="placeholder col-2"></span>
                                                                        <span class="placeholder col-2"></span>
                                                                        <span class="placeholder col-3"></span>
                                                                        <span class="placeholder col-3"></span>
                                                                        <span class="placeholder col-6"></span>
                                                                        <span class="placeholder col-1"></span>
                                                                    </div>`;
                const data = {
                    username: username,
                    password: password,
                    keyword: input
                }
                fetch('/API/searchallaccountdata', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                    credentials: 'include'
                    })
                    .then(res => res.json())
                    .then(async resData => {
                    if (resData.status) {
                        let HTMLUser = "";
                        let HTMLProduct = "";
                        let HTMLPost = "";
                        await fetch('/API/searchallreportuserdata', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                        })
                        .then(res => res.json())
                        .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishuser-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderuser-profile-modal").innerHTML = "";
                                    HTMLUser = `<h3>Tố cáo người dùng</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên người dùng</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-user-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-user-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-user-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="user-sender-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="user-sender-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="user-sender-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'user-sender', '${randomNumber}', 1, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                                let punishModal = `<div class="modal fade" id="punish-user-${items.userid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punish-user-${items.userid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punish-user-${items.userid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-reason-${items.userid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="user-punish-reason-${items.userid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-startime-${items.userid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="user-punish-startime-${items.userid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="user-punish-endime-${items.userid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="user-punish-endime-${items.userid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.userid}', 'user', '${randomNumber}', 1, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderuser-profile-modal").innerHTML += punishSenderModal;
                                            document.getElementById("punishuser-profile-modal").innerHTML += punishModal;
                                            HTMLUser += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/profile/${items.username}" class="overflow-1" target="_blank">${items.username}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-user-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#punish-user-${items.userid}-${randomNumber}-punishModal">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLUser += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        await fetch('/API/searchallreportproductdata', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                        })
                        .then(res => res.json())
                        .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishproduct-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderproduct-profile-modal").innerHTML = "";
                                    HTMLProduct = `<h3>Tố cáo Sản phẩm</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên sản phẩm</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-product-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-product-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-product-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="product-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="product-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="product-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="product-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'product', '${randomNumber}', 2, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderproduct-profile-modal").innerHTML += punishSenderModal;
                                            HTMLProduct += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/product/${items.productpath}" class="overflow-1" target="_blank">${items.producttitle}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-product-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" onclick="ExecuteReportProduct(${items.reportid}, '${items.productid}')">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLProduct += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        await fetch('/API/searchallreportpostdata', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                            credentials: 'include'
                        })
                        .then(res => res.json())
                        .then(resData => {
                            if (resData.status) {
                                if (resData.data != null && resData.data.length > 0) {
                                    document.getElementById("punishpost-profile-modal").innerHTML = "";
                                    document.getElementById("punishsenderpost-profile-modal").innerHTML = "";
                                    HTMLPost = `<h3>Tố cáo bài viết</h3>                        
                                                <table class="table table-dark">
                                                <thead>
                                                <tr>
                                                    <th class="tb-col1" scope="col">ID</th>
                                                    <th class="tb-col2" scope="col">Tên bài viết</th>
                                                    <th class="tb-col3" scope="col">Tên người tố cáo</th>
                                                    <th class="tb-col5" scope="col">Lý do</th>
                                                    <th class="tb-col6" scope="col">Chức năng</th>
                                                </tr>
                                                </thead>
                                                <tbody>`;
                                    resData.data.forEach(items => {
                                            const randomNumber = Math.floor(Math.random() * 1e9);
                                            let punishSenderModal = `<div class="modal fade" id="punishSender-post-${items.senderid}-${randomNumber}-punishModal" tabindex="-1" aria-labelledby="punishSender-post-${items.senderid}-${randomNumber}-punishLable" aria-hidden="true">
                                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                            <h1 class="modal-title fs-5" id="punishSender-post-${items.senderid}-${randomNumber}-punishLabel">Trừng phạt</h1>
                                                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                            <div class="create-product-form">
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-reason-${items.senderid}-${randomNumber}">Lý do</label>
                                                                                    <input type="text" id="post-punish-reason-${items.senderid}-${randomNumber}" placeholder="Lý do">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-startime-${items.senderid}-${randomNumber}">Thời gian bắt đầu</label>
                                                                                    <input type="datetime-local" id="post-punish-startime-${items.senderid}-${randomNumber}" placeholder="Thời gian bắt đầ">
                                                                                </div>
                                                                                <div class="create-product-form-group">
                                                                                    <label for="post-punish-endime-${items.senderid}-${randomNumber}">Thời gian kết thúc</label>
                                                                                    <input type="datetime-local" id="post-punish-endime-${items.senderid}-${randomNumber}" placeholder="Thời gian kết thúc">
                                                                                </div>
                                                                                <div class="accoutn-auth-group-btn">
                                                                                    <button type="button" onclick="ExecuteReportUser('${items.senderid}', 'post', '${randomNumber}', 3, ${items.reportid})" class="btn btn-success form-auth-btn">Xác nhận</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>`;
                                            document.getElementById("punishsenderpost-profile-modal").innerHTML += punishSenderModal;
                                            HTMLPost += `<tr>
                                                <td class="tb-col1" scope="row">${items.reportid}</td>
                                                <td class="tb-col2"><a href="/post/${items.postpath}" class="overflow-1" target="_blank">${items.posttitle}</a></td>
                                                <td class="tb-col3"><a href="/profile/${items.sendername}" class="overflow-1" target="_blank">${items.sendername}</a></td>
                                                <td class="tb-col5">${items.message != null ? items.message : "Không có lý do"}</td>
                                                <td class="tb-col6"><button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#punishSender-post-${items.senderid}-${randomNumber}-punishModal">Phạt span</button><button type="button" class="btn btn-info" onclick="ExecuteReportPost(${items.reportid}, ${items.postid})">Xử lý</button></td>
                                            </tr>`;
                                    });
                                    HTMLPost += `</tbody>
                                                </table>`;
                                }
                            }
                        })
                        if (HTMLUser != "" || HTMLProduct != "" || HTMLPost != "") {
                            document.getElementById("productlist").innerHTML = "";
                            document.getElementById("productlist").innerHTML += HTMLUser;
                            document.getElementById("productlist").innerHTML += HTMLProduct;
                            document.getElementById("productlist").innerHTML += HTMLPost;
                        }
                        else {
                            document.getElementById("productlist").innerHTML = `<div class="none-items">
                                <p>Hiện không có bất cứ tố cáo nào hợp lệ</p>
                            </div>`;
                            return;
                        }
                    }
                })
            }
        }
        else {
            location.href = "/";
        }
    }
    function ExecuteReportUser(userid, id, rdcode, type, reportid) {
        const username = localStorage.getItem("username");
        const password = localStorage.getItem("password");
        const reason = document.getElementById(`${id}-punish-reason-${userid}-${rdcode}`).value;
        const starttime = document.getElementById(`${id}-punish-startime-${userid}-${rdcode}`).value;
        const endtime = document.getElementById(`${id}-punish-endime-${userid}-${rdcode}`).value;

        if (username !== undefined && username !== null && password !== undefined && password !== null) {
            if (starttime !== "" && endtime !== "") {
                if (starttime < endtime && endtime > starttime) {
                    const data = {
                        username: username,
                        password: password,
                        userid: userid,
                        reason: reason,
                        starttime: starttime,
                        endtime: endtime,
                        table: type,
                        reportid: reportid
                    }
                    fetch('/API/executereportuser', {
                        method: 'POST',
                        headers: {
                          'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                        credentials: 'include'
                      })
                      .then(res => res.json())
                      .then(resData => {
                        if (resData.status) {
                            Swal.fire({
                                icon: "success",
                                title: "Chúc mừng",
                                text: `${resData.message}`,
                                background: '#222338',
                                color: "white"
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.backdrop) {
                                  location.reload();
                                }
                                else {
                                    location.reload();
                                }
                              });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: `${resData.message}`,
                                background: '#222338',
                                color: "white",
                                footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                            });
                        }
                      })
                }
                else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: `Thời gian bắt đầu trừng phạt phải bé hơn thời gian kết thúc trường phạt`,
                        background: '#222338',
                        color: "white",
                        footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                      });
                    return;
                }
            }
            else {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: `Bạn phải điền đầy đủ thông tin`,
                    background: '#222338',
                    color: "white",
                    footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                  });
                return;
            }
        }
        else {
            location.href = "/";
        }
    }
    function ExecuteReportProduct(reportid, productid) {
        const username = localStorage.getItem("username");
        const password = localStorage.getItem("password");

        if (username !== undefined && username !== null && username !== "" && password !== undefined && password !== "" && password !== null) {
            const data = {
                username: username,
                password: password
            }
            fetch('/API/authenticationpermission', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
                credentials: 'include'
              })
              .then(res => res.json())
              .then(resData => {
                    if (resData.permission.acceptreportmanagement) {
                        Swal.fire({
                            title: "Bạn chắc chắn muống xử lý?",
                            text: "Việc xử lý có thể khiến báo cáo biến mất vĩnh viễn",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#d33",
                            confirmButtonText: "Hũy",
                            cancelButtonColor: "#3869d3",
                            confirmButtonText: "Xóa",
                            background: '#222338',
                            color: "white"
                          }).then((result) => {
                            if (result.isConfirmed) {
                                const data = {
                                    username: username,
                                    password: password,
                                    reportid: reportid,
                                    productid: productid
                                }
                                fetch('/API/executereportproduct', {
                                    method: 'POST',                
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(data),
                                    credentials: 'include'
                                  })
                                  .then(res => res.json())
                                  .then(resData => {
                                    if (resData.status) {
                                        Swal.fire({
                                            icon: "success",
                                            title: "Chúc mừng",
                                            text: `${resData.message}`,
                                            background: '#222338',
                                            color: "white",
                                          }).then((result) => {
                                            if (result.dismiss === Swal.DismissReason.backdrop) {
                                              location.reload();
                                            }
                                            else {
                                                location.reload();
                                            }
                                          });;
                                    }
                                    else {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Oops...",
                                            text: `${resData.message}`,
                                            background: '#222338',
                                            color: "white",
                                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                                          });
                                        return;
                                    }
                                })
                            }
                          });
                    }
                    else {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Bạn không có quyền thực hiện điều này",
                            background: '#222338',
                            color: "white",
                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                          });
                        return;
                    }
              })
        }
        else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Bạn không có quyền thực hiện điều này",
                background: '#222338',
                color: "white",
                footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
              });
            return;
        }
    }
    function ExecuteReportPost(reportid, postid) {
        const username = localStorage.getItem("username");
        const password = localStorage.getItem("password");

        if (username !== undefined && username !== null && username !== "" && password !== undefined && password !== "" && password !== null) {
            const data = {
                username: username,
                password: password
            }
            fetch('/API/authenticationpermission', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
                credentials: 'include'
              })
              .then(res => res.json())
              .then(resData => {
                    if (resData.permission.acceptreportmanagement) {
                        Swal.fire({
                            title: "Bạn chắc chắn muống xử lý?",
                            text: "Việc xử lý có thể khiến báo cáo biến mất vĩnh viễn",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#d33",
                            confirmButtonText: "Hũy",
                            cancelButtonColor: "#3869d3",
                            confirmButtonText: "Xóa",
                            background: '#222338',
                            color: "white"
                          }).then((result) => {
                            if (result.isConfirmed) {
                                const data = {
                                    username: username,
                                    password: password,
                                    reportid: reportid,
                                    postid: postid
                                }
                                fetch('/API/executereportpost', {
                                    method: 'POST',                
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(data),
                                    credentials: 'include'
                                  })
                                  .then(res => res.json())
                                  .then(resData => {
                                    if (resData.status) {
                                        Swal.fire({
                                            icon: "success",
                                            title: "Chúc mừng",
                                            text: `${resData.message}`,
                                            background: '#222338',
                                            color: "white",
                                          }).then((result) => {
                                            if (result.dismiss === Swal.DismissReason.backdrop) {
                                              location.reload();
                                            }
                                            else {
                                                location.reload();
                                            }
                                          });;
                                    }
                                    else {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Oops...",
                                            text: `${resData.message}`,
                                            background: '#222338',
                                            color: "white",
                                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                                          });
                                        return;
                                    }
                                })
                            }
                          });
                    }
                    else {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Bạn không có quyền thực hiện điều này",
                            background: '#222338',
                            color: "white",
                            footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
                          });
                        return;
                    }
              })
        }
        else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Bạn không có quyền thực hiện điều này",
                background: '#222338',
                color: "white",
                footer: '<a href="https://www.facebook.com/ZombieGenZ/" target="_blank" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">Bạn cần giúp hổ trợ?</a>'
              });
            return;
        }
    }
    </script>
    <script src="https://kit.fontawesome.com/476445fe42.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>